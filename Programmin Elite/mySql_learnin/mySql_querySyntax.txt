一些最重要的SQL命令
SELECT - 从数据库中提取数据
UPDATE - 更新数据库中的数据
DELETE - 从数据库中删除数据
INSERT INTO - 向数据库中插入新数据
CREATE DATABASE - 创建新数据库
ALTER DATABASE - 修改数据库
CREATE TABLE - 创建新表
ALTER TABLE - 变更（改变）数据库表
DROP TABLE - 删除表
CREATE INDEX - 创建索引（搜索键）
DROP INDEX - 删除索引

1. net start mysql;
boot the mysql server

2. net stop mysql;
stop the mysql server

3. mysql -u root -p;
sign in the mysql client

4.use dataBase_name;
switch to specified DATABASE

5. MYSQL 存储过程中的关键语法

声明语句结束符，可以自定义:
DELIMITER $$ 或 DELIMITER //

声明存储过程:
CREATE PROCEDURE demo_in_parameter(IN p_in int)

存储过程开始和结束符号:
BEGIN .... END

变量赋值:
SET @p_in=1

变量定义:
DECLARE l_int int unsigned default 4000000;

创建mysql存储过程、存储函数:
create procedure 存储过程名(参数)

存储过程体:
create function 存储函数名(参数)

function实例：
set global log_bin_trust_function_creators = 1;
DROP FUNCTION IF EXISTS rand_string;
create function rand_string(n int)
returns varchar(255)
begin
declare chars_str varchar(100) default 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
declare return_str varchar(255) default '';
declare i int default 0;
while i < n do
set return_str = concat(return_str, substring(chars_str, floor(1+rand()*62),1));
set i = i+1;
end while;
return return_str;
end $$

procedure实例:
create procedure rand_insert_tenThousand_records()
begin
declare tmp int;
set tmp = 10000;
while tmp > 0 do
insert into single_table(key1,key2,key3,key_part1,key_part2,key_part3,common_field)values(rand_string(1),tmp,rand_string(2),rand_string(3),rand_string(4),rand_string(5),rand_string(6));
set tmp = tmp - 1;
end while;
end;

6. INSERT INTO
INSERT INTO table_name
VALUES (value1, value2, value3,....)

or

INSERT INTO table_name
(column1, column2, column3,...)
VALUES (value1, value2, value3,....)

7. MySql字符串函数
CONCAT(s1,s2...sn)

字符串 s1,s2 等多个字符串合并为一个字符串合并多个字符串

SELECT CONCAT("SQL ", "Runoob ", "Gooogle ", "Facebook") AS ConcatenatedString;
-------------------------------------------------------------------------------------------

SUBSTRING(s, start, length)

从字符串 s 的 start 位置截取长度为 length 的子字符串

从字符串 RUNOOB 中的第 2 个位置截取 3个 字符：
SELECT SUBSTRING("RUNOOB", 2, 3) AS ExtractString; -- UNO
-------------------------------------------------------------------------------------------

8. mysql中procedure与function的区别
1.procedure必须显示声明参数为in、out、或inout;function不用声明，所有参数隐式为in
2.function必须用returns定义返回值类型
3.function用return来指定返回值

9. 查看存储过程或函数的创建代码
show create procedure proc_name;
show create function func_name;

10. 查看指定表的结构
select* from information_schema.columns where table_name = 'table_name';

11. 删除存储过程和函数
DROP {PROCEDURE|FUNCTION} Sp_name;

12. procedure 和 function 的调用方式
call procedure（参数）
function（参数）

13. 显示所有数据库，显示所有表
show databses;
show tables;

14. 清空表
truncate table table_name;
delete from table_name;

truncate和delete的区别
1)事务：truncate是不可以rollback的，但是delete是可以rollback的；
  原因：truncate删除整表数据(ddl语句,隐式提交)，delete是一行一行的删除，可以rollback
2)效果：truncate删除后将重新水平线和索引(id从零开始) ,delete不会删除索引
3)truncate 不能触发任何Delete触发器。
4)delete 删除可以返回行数

15. 强制终止query执行
show processlist; 查看当前mysql中各个线程状态，找到需要杀死的线程（id）
kill id; 来杀死线程

16. mysqld 命令
执行net stop mysql,停止mysql服务
执行mysqld -remove,移除服务
执行mysqld -install,安装服务
执行mysqld --initialize-insecure,初始化
执行net start mysql,开启mysql服务

17. 显示所有函数和过程 ？

18. 一次性执行多条sql语句
把多条正确的sql语句各末尾加上分号拼接起来一次性提交执行

19. in的子查询
where  字段  in (值1，值2，....）；比如： where  age  in (18, 28, 38); 表示age为其中任意一个就可以

20. union
MySQL UNION 操作符，它会把多个查询的结果集合并起来并对结果集中的记录进行去重
e.g.
SELECT * FROM s1  UNION SELECT * FROM s2;

21. MySQL数据类型
一个字节 8个bit 最大能表示2^8-1
两个字节 16个bit 最大能表示2^16-1
...

22. 10进制小数部分转为二进制的方法
一、取整运算
1、用2乘十进制小数，可以得到积：2*0.875=1.75；
2、将积的整数部分1取出，再用2乘余下的小数部分0.75，又得到一个积，则2*0.75=1.5‘
3、再将积的整数部分取出，如此进行，则0.5*2=1.0；此时，积中的小数部分为零，此时0或1为二进制的最后一位，不再往下计算。
二、按序排列
把取出的整数部分按顺序排列起来，先取的整数作为二进制小数的高位有效位，后取的整数作为低位有效位。即0.875=（0.111）B

23. 查看表结构
DESCRIBE 表名;
DESC 表名;
EXPLAIN 表名;
SHOW COLUMNS FROM 表名;
SHOW FIELDS FROM 表名;
e.g.
mysql> DESC student_info;
SHOW CREATE TABLE student_info;
mysql> SHOW CREATE TABLE student_info\G

24.
